services:
  database:
    image: postgres
    restart: always
    container_name: postgres
    ports:
      - 5001:5432/tcp
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=maintmanager

  sonar-database:
    image: postgres
    restart: always
    container_name: sonar-postgres
    ports:
      - 5002:5432/tcp
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    networks:
      - local-sonarqube
    healthcheck:
      test: exit 0

  sonarqube:
    image: sonarqube:8.9-community
    restart: always
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - ./sonarqube/sonarqube_data:/opt/sonarqube/data
      - ./sonarqube/sonarqube_extensions:/opt/sonarqube/extensions
      - ./sonarqube/sonarqube_logs:/opt/sonarqube/logs
      - ./sonarqube/sonarqube_temp:/opt/sonarqube/temp
    depends_on:
      sonar-database:
        condition: service_healthy
    networks:
      - local-sonarqube

volumes:
  pgdata:

networks:
  local-sonarqube:
    driver: bridge